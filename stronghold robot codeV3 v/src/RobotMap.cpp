// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::manipAtopMotor;
std::shared_ptr<SpeedController> RobotMap::manipAbottomMotor;
std::shared_ptr<SpeedController> RobotMap::manipAbeltMotor;
std::shared_ptr<SpeedController> RobotMap::manipAintakeMotor;
std::shared_ptr<Compressor> RobotMap::manipACompressor1;
std::shared_ptr<Solenoid> RobotMap::manipASolenoid1;
std::shared_ptr<DoubleSolenoid> RobotMap::manipADoubleSolenoid1;
std::shared_ptr<SpeedController> RobotMap::driveTrainleftMotor1;
std::shared_ptr<SpeedController> RobotMap::driveTrainleftMotor2;
std::shared_ptr<SpeedController> RobotMap::driveTrainrightMotor1;
std::shared_ptr<SpeedController> RobotMap::driveTrainrightMotor2;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    manipAtopMotor.reset(new Talon(4));
    lw->AddActuator("Manip A", "topMotor", (Talon&) manipAtopMotor);
    
    manipAbottomMotor.reset(new Talon(5));
    lw->AddActuator("Manip A", "bottomMotor", (Talon&) manipAbottomMotor);
    
    manipAbeltMotor.reset(new Talon(6));
    lw->AddActuator("Manip A", "beltMotor", (Talon&) manipAbeltMotor);
    
    manipAintakeMotor.reset(new Talon(7));
    lw->AddActuator("Manip A", "intakeMotor", (Talon&) manipAintakeMotor);
    
    manipACompressor1.reset(new Compressor(0));
    
    
    manipASolenoid1.reset(new Solenoid(0, 0));
    lw->AddActuator("Manip A", "Solenoid 1", manipASolenoid1);
    
    manipADoubleSolenoid1.reset(new DoubleSolenoid(0, 1, 2));
    lw->AddActuator("Manip A", "Double Solenoid 1", manipADoubleSolenoid1);
    
    driveTrainleftMotor1.reset(new Talon(0));
    lw->AddActuator("DriveTrain", "leftMotor1", (Talon&) driveTrainleftMotor1);
    
    driveTrainleftMotor2.reset(new Talon(1));
    lw->AddActuator("DriveTrain", "leftMotor2", (Talon&) driveTrainleftMotor2);
    
    driveTrainrightMotor1.reset(new Talon(2));
    lw->AddActuator("DriveTrain", "rightMotor1", (Talon&) driveTrainrightMotor1);
    
    driveTrainrightMotor2.reset(new Talon(3));
    lw->AddActuator("DriveTrain", "rightMotor2", (Talon&) driveTrainrightMotor2);
    
    driveTrainRobotDrive41.reset(new RobotDrive(driveTrainleftMotor1, driveTrainleftMotor2,
              driveTrainrightMotor1, driveTrainrightMotor2));
    
    driveTrainRobotDrive41->SetSafetyEnabled(true);
        driveTrainRobotDrive41->SetExpiration(0.1);
        driveTrainRobotDrive41->SetSensitivity(0.5);
        driveTrainRobotDrive41->SetMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
