// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/driveWithJoysticks.h"
#include "Commands/liftPickUp.h"
#include "Commands/manipulatorBControll.h"
#include "Commands/pickUp.h"
#include "Commands/shoot.h"
#include "Commands/stopShoot.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    driveStickRight.reset(new Joystick(1));
    
    driveStickLeft.reset(new Joystick(0));
    
    manipulatorStick.reset(new Joystick(2));
    
    buttonReleased2.reset(new JoystickButton(manipulatorStick.get(), 1));
    buttonReleased2->WhenReleased(new liftPickUp());
    buttonHeld2.reset(new JoystickButton(manipulatorStick.get(), 2));
    buttonHeld2->WhileHeld(new pickUp());
    buttonReleased1.reset(new JoystickButton(manipulatorStick.get(), 1));
    buttonReleased1->WhenReleased(new stopShoot());
    buttonHeld1.reset(new JoystickButton(manipulatorStick.get(), 1));
    buttonHeld1->WhileHeld(new shoot());

    // SmartDashboard Buttons
    SmartDashboard::PutData("stopShoot", new stopShoot());
    SmartDashboard::PutData("liftPickUp", new liftPickUp());
    SmartDashboard::PutData("manipulatorBControll", new manipulatorBControll());
    SmartDashboard::PutData("shoot", new shoot());
    SmartDashboard::PutData("driveWithJoysticks", new driveWithJoysticks());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    SmartDashboard::PutData("pickUp", new pickUp());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getmanipulatorStick() {
   return manipulatorStick;
}

std::shared_ptr<Joystick> OI::getdriveStickLeft() {
   return driveStickLeft;
}

std::shared_ptr<Joystick> OI::getdriveStickRight() {
   return driveStickRight;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
